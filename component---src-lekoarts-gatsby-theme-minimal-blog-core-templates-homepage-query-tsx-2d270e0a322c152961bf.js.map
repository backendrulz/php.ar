{"version":3,"file":"component---src-lekoarts-gatsby-theme-minimal-blog-core-templates-homepage-query-tsx-2d270e0a322c152961bf.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/homepage.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog-core/templates/homepage-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3, a: { variant: `links.listItem` } },\n      variant: `section_bottom`,\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components), {Text} = _components;\n  if (!Text) _missingMdxReference(\"Text\", true);\n  return React.createElement(React.Fragment, null, React.createElement(Text, {\n    children: `Â¡Bienvenidos a mi blog sobre PHP!`,\n    sx: {\n      fontSize: [4, 5, 6],\n      fontWeight: `bold`,\n      color: `heading`\n    }\n  }), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-php\"\n  }, \"class Blog {\\n    public string $name        = 'PHP Argentina';\\n    public string $description = 'Blog sobre programaciÃ³n en PHP.';\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"En este blog voy a compartir artÃ­culos, consejos y ejemplos de cÃ³digo sobre \", React.createElement(_components.strong, null, \"PHP\"), \".\\nTambiÃ©n sus \", React.createElement(_components.strong, null, \"librerÃ­as\"), \" y \", React.createElement(_components.strong, null, \"frameworks\"), \" mÃ¡s usados. ðª\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components), {Title} = _components;\n  if (!Title) _missingMdxReference(\"Title\", true);\n  return React.createElement(React.Fragment, null, React.createElement(Title, {\n    text: \"Proyectos\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Pronto...\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui';\nimport { HeadFC, Link } from 'gatsby';\nimport Layout from '@lekoarts/gatsby-theme-minimal-blog/src/components/layout';\nimport Title from '@lekoarts/gatsby-theme-minimal-blog/src/components/title';\nimport Listing from '@lekoarts/gatsby-theme-minimal-blog/src/components/listing';\nimport List from '@lekoarts/gatsby-theme-minimal-blog/src/components/list';\nimport useMinimalBlogConfig from '@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config';\nimport useSiteMetadata from '@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-site-metadata';\nimport replaceSlashes from '@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes';\nimport { visuallyHidden } from '@lekoarts/gatsby-theme-minimal-blog/src/styles/utils';\nimport Seo from '@lekoarts/gatsby-theme-minimal-blog/src/components/seo';\nimport Hero from '@lekoarts/gatsby-theme-minimal-blog/src/texts/hero.mdx';\nimport Bottom from '@lekoarts/gatsby-theme-minimal-blog/src/texts/bottom.mdx';\n\nexport type MBHomepageProps = {\n  posts: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  }[];\n};\n\nconst Homepage = ({ posts }: MBHomepageProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig();\n  const { siteTitle } = useSiteMetadata();\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <section\n        sx={{\n          mb: [4, 5, 5],\n          p: { fontSize: [1, 2, 3], mt: 2 },\n          variant: `section_hero`,\n        }}\n      >\n        <Hero />\n      </section>\n      <Title text='Ãltimas publicaciones'>\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>\n          Ver todas las publicaciones\n        </Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List>\n        <Bottom />\n      </List>\n    </Layout>\n  );\n};\n\nexport default Homepage;\n\nexport const Head: HeadFC = () => <Seo />;\n","import { graphql } from 'gatsby';\nimport HomepageComponent, {\n  Head,\n} from '@lekoarts/gatsby-theme-minimal-blog-core/src/components/homepage';\n\nexport default HomepageComponent;\n\nexport { Head };\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { date: DESC }, limit: 5) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`;\n","import * as React from \"react\"\nimport Homepage, { Head } from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui';\nimport * as React from 'react';\nimport { Link } from 'gatsby';\nimport useMinimalBlogConfig from '@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config';\nimport replaceSlashes from '@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes';\n\ntype TagsProps = {\n  tags: {\n    name: string;\n    slug: string;\n  }[];\n};\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig();\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link\n            sx={(t) => ({ ...t.styles?.a })}\n            to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}\n          >\n            {tag.name.toLowerCase()}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default ItemTags;\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui';\nimport BlogListItem from '@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item';\n\ntype ListingProps = {\n  posts: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  }[];\n  className?: string;\n  showTags?: boolean;\n};\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [3, 4, 5] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n);\n\nexport default Listing;\n"],"names":["_ref","title","description","pathname","image","children","canonicalUrl","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","React","lang","name","content","property","rel","type","sizes","href","withPrefix","jsx","sx","mb","ul","margin","padding","li","listStyle","a","variant","_createMdxContent","props","_components","Object","assign","pre","code","p","strong","_provideComponents","components","Text","id","component","Error","_missingMdxReference","fontSize","fontWeight","color","className","wrapper","MDXLayout","Title","text","posts","basePath","blogPath","useMinimalBlogConfig","Layout","visuallyHidden","mt","Hero","Link","to","replaceSlashes","Listing","showTags","List","Bottom","Head","Seo","data","allPost","Homepage","nodes","tags","tagsPath","map","tag","i","key","slug","t","_t$styles","styles","toLowerCase","post","Box","date","ItemTags","BlogListItem"],"sourceRoot":""}