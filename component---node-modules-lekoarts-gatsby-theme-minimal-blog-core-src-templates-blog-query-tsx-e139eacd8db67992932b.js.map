{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-blog-query-tsx-e139eacd8db67992932b.js","mappings":"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","sources":["webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/blog.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/blog-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/blog.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, Heading, Flex } from \"theme-ui\"\nimport { HeadFC, Link } from \"gatsby\"\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\"\nimport Listing from \"@lekoarts/gatsby-theme-minimal-blog/src/components/listing\"\nimport useMinimalBlogConfig from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes\"\nimport Seo from \"@lekoarts/gatsby-theme-minimal-blog/src/components/seo\"\n\nexport type MBBlogProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n}\n\nconst Blog = ({ posts }: MBBlogProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\n        <Heading as=\"h1\" variant=\"styles.h1\" sx={{ marginY: 2 }}>\n          Blog\n        </Heading>\n        <Link\n          sx={(t) => ({ ...t.styles?.a, variant: `links.secondary`, marginY: 2 })}\n          to={replaceSlashes(`/${basePath}/${tagsPath}`)}\n        >\n          Ver todas las etiquetas\n        </Link>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  )\n}\n\nexport default Blog\n\nexport const Head: HeadFC = () => <Seo title=\"Blog\" />\n","import { graphql } from \"gatsby\"\nimport BlogComponent, { Head } from \"../components/blog\"\n\nexport default BlogComponent\n\nexport { Head }\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { date: DESC }) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Blog, { Head } from \"../../../components/blog\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreBlog({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Blog posts={allPost.nodes} {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui';\nimport BlogListItem from '@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item';\n\ntype ListingProps = {\n  posts: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  }[];\n  className?: string;\n  showTags?: boolean;\n};\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [3, 4, 5] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n);\n\nexport default Listing;\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui';\nimport * as React from 'react';\nimport { Link } from 'gatsby';\nimport useMinimalBlogConfig from '@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config';\nimport replaceSlashes from '@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes';\n\ntype TagsProps = {\n  tags: {\n    name: string;\n    slug: string;\n  }[];\n};\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig();\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link\n            sx={(t) => ({ ...t.styles?.a })}\n            to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}\n          >\n            {tag.name.toLowerCase()}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default ItemTags;\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["_ref","posts","tagsPath","basePath","useMinimalBlogConfig","jsx","Layout","Flex","sx","alignItems","justifyContent","flexFlow","Heading","as","variant","marginY","Link","t","_t$styles","styles","a","to","replaceSlashes","Listing","mt","Head","Seo","title","props","data","allPost","React","Blog","Object","assign","nodes","post","showTags","Box","mb","slug","fontSize","color","date","tags","ItemTags","className","map","BlogListItem","key","tag","i","name","toLowerCase","description","pathname","image","children","canonicalUrl","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix"],"sourceRoot":""}