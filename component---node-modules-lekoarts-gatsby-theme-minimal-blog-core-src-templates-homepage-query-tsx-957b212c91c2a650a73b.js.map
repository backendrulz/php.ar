{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-957b212c91c2a650a73b.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"sourcesContent":["/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3, a: { variant: `links.listItem` } },\n      variant: `section_bottom`,\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components), {Text} = _components;\n  if (!Text) _missingMdxReference(\"Text\", true);\n  return React.createElement(React.Fragment, null, React.createElement(Text, {\n    children: `Â¡Bienvenidos a mi blog sobre PHP!`,\n    sx: {\n      fontSize: [4, 5, 6],\n      fontWeight: `bold`,\n      color: `heading`\n    }\n  }), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-php\"\n  }, \"class Blog {\\n    public string $name        = 'PHP Argentina';\\n    public string $description = 'Blog sobre programaciÃ³n en PHP.';\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"En este blog voy a compartir artÃ­culos, consejos y ejemplos de cÃ³digo sobre \", React.createElement(_components.strong, null, \"PHP\"), \".\\nTambiÃ©n sus \", React.createElement(_components.strong, null, \"librerÃ­as\"), \" y \", React.createElement(_components.strong, null, \"frameworks\"), \" mÃ¡s usados. ðŸ’ª\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components), {Title} = _components;\n  if (!Title) _missingMdxReference(\"Title\", true);\n  return React.createElement(React.Fragment, null, React.createElement(Title, {\n    text: \"Proyectos\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Pronto...\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui';\nimport { HeadFC, Link } from 'gatsby';\nimport Layout from '@lekoarts/gatsby-theme-minimal-blog/src/components/layout';\nimport Title from '@lekoarts/gatsby-theme-minimal-blog/src/components/title';\nimport Listing from '@lekoarts/gatsby-theme-minimal-blog/src/components/listing';\nimport List from '@lekoarts/gatsby-theme-minimal-blog/src/components/list';\nimport useMinimalBlogConfig from '@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config';\nimport useSiteMetadata from '@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-site-metadata';\nimport replaceSlashes from '@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes';\nimport { visuallyHidden } from '@lekoarts/gatsby-theme-minimal-blog/src/styles/utils';\nimport Seo from '@lekoarts/gatsby-theme-minimal-blog/src/components/seo';\nimport Hero from '@lekoarts/gatsby-theme-minimal-blog/src/texts/hero.mdx';\nimport Bottom from '@lekoarts/gatsby-theme-minimal-blog/src/texts/bottom.mdx';\n\nexport type MBHomepageProps = {\n  posts: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  }[];\n};\n\nconst Homepage = ({ posts }: MBHomepageProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig();\n  const { siteTitle } = useSiteMetadata();\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <section\n        sx={{\n          mb: [3, 4, 5],\n          p: { fontSize: [1, 2, 3], mt: 2 },\n          variant: `section_hero`,\n        }}\n      >\n        <Hero />\n      </section>\n      <Title text='Ãšltimas publicaciones'>\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>\n          Todas las publicaciones\n        </Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List>\n        <Bottom />\n      </List>\n    </Layout>\n  );\n};\n\nexport default Homepage;\n\nexport const Head: HeadFC = () => <Seo />;\n","import { graphql } from \"gatsby\"\nimport HomepageComponent, { Head } from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport { Head }\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { date: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Homepage, { Head } from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n\nexport { Head }\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui';\nimport * as React from 'react';\nimport { Link } from 'gatsby';\nimport useMinimalBlogConfig from '@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config';\nimport replaceSlashes from '@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes';\n\ntype TagsProps = {\n  tags: {\n    name: string;\n    slug: string;\n  }[];\n};\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig();\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link\n            sx={(t) => ({ ...t.styles?.a })}\n            to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}\n          >\n            {tag.name.toLowerCase()}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default ItemTags;\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui';\nimport BlogListItem from '@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item';\n\ntype ListingProps = {\n  posts: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  }[];\n  className?: string;\n  showTags?: boolean;\n};\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [3, 4, 5] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n);\n\nexport default Listing;\n"],"names":["_ref","children","jsx","sx","mb","ul","margin","padding","li","listStyle","a","variant","_createMdxContent","props","_components","Object","assign","pre","code","p","strong","_provideComponents","components","Text","id","component","Error","_missingMdxReference","React","fontSize","fontWeight","color","className","wrapper","MDXLayout","Title","text","posts","basePath","blogPath","useMinimalBlogConfig","siteTitle","useSiteMetadata","Layout","visuallyHidden","mt","Hero","Link","to","replaceSlashes","Listing","showTags","List","Bottom","Head","Seo","data","allPost","Homepage","nodes","title","description","pathname","image","canonicalUrl","site","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","name","content","property","rel","type","sizes","href","withPrefix","tags","tagsPath","map","tag","i","key","slug","t","_t$styles","styles","toLowerCase","post","Box","date","ItemTags","BlogListItem"],"sourceRoot":""}